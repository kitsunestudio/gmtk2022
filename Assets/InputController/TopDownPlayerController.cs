//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/InputController/TopDownPlayerController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @TopDownPlayerController : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @TopDownPlayerController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""TopDownPlayerController"",
    ""maps"": [
        {
            ""name"": ""Character"",
            ""id"": ""1e106df4-5ae2-436f-84b4-0c1304eb6d79"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""5529f91c-e2f0-4f50-b82a-edcf73f92c9b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Value"",
                    ""id"": ""0f8cf9a8-c205-4781-ad45-cce3200ba823"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""d4"",
                    ""type"": ""Button"",
                    ""id"": ""2792c88e-1d87-461d-9ad2-7a3f8fe8cb51"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""d6"",
                    ""type"": ""Button"",
                    ""id"": ""1e1fe289-4ead-4c93-a46c-0f62cd9a0085"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""d8"",
                    ""type"": ""Button"",
                    ""id"": ""001a7691-36d4-4067-bd84-6023ce450023"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""d12"",
                    ""type"": ""Button"",
                    ""id"": ""8f88e490-2052-4a8c-8563-56b1a8172b2f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""d20"",
                    ""type"": ""Button"",
                    ""id"": ""e7300206-4c8c-4e55-88c0-2ff0eb610e05"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""2ccc1055-cfc9-4487-8891-8b9e352fbc0c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b6942a7f-afdb-44a7-b4f3-16798a8637bb"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a3b6f0e7-f84c-4786-aafc-0658758d3d79"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""81f744e8-2fb4-45c5-ad51-2c7b85468066"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b4b4dbed-e2f5-4ba1-a180-33d6fd5f543c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""86c3dc5e-097b-40c3-931d-94eff473a224"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ce149b91-233e-4066-99a9-7c93d2a1440f"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3d4f1bd1-b06a-446e-b988-e56299cec520"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2d902b13-7e60-4041-b6bf-c16829fb6310"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""77634ab0-4d7a-4cfe-912f-480967884213"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6513c5d1-baef-499f-be3b-47c6062fe95a"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""d4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21070740-9426-4510-9c7a-309e7a549e36"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""d6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a3f755b-3157-4158-93e9-042229ba199e"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""d8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7707c292-6d6e-44d2-a358-2ccd63207722"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""d12"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""02a257b2-b66b-4323-a432-ac2f3cce3705"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""d20"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""66bc936b-aeb9-4340-afd1-d488802fcd26"",
            ""actions"": [
                {
                    ""name"": ""OpenCloseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""a698d038-ccf0-4053-add0-33d3712719aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextDialogue"",
                    ""type"": ""Button"",
                    ""id"": ""63cfa266-d7ef-42f2-af42-2b1715b5871d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectDialogue1"",
                    ""type"": ""Button"",
                    ""id"": ""d26435af-c39a-4aac-8ac2-c8f0c71df7e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectDialogue2"",
                    ""type"": ""Button"",
                    ""id"": ""ccb1bba5-bb10-493b-88c3-eec4a85a7907"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectDialogue3"",
                    ""type"": ""Button"",
                    ""id"": ""97de491f-b2b4-420c-a2b2-a30693b7565d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenCrafting"",
                    ""type"": ""Button"",
                    ""id"": ""3a1aefa7-ecc7-43fc-97f9-a30fdf1f8414"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""938afcd2-e8af-43d9-8576-16273dbebe5e"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenCloseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23e04803-f89f-4c28-bd46-0896e3329dae"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextDialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e147f10-79c3-4b8f-9690-c9e85df1942d"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectDialogue1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""383da78c-4ed8-492f-9f4c-1599fa4543e0"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectDialogue2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f17ecbd2-7328-4cfe-bf80-1db0327fb12b"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectDialogue3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f0e058f-c4e1-4c42-bd85-2cdabc397fd5"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenCrafting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Character
        m_Character = asset.FindActionMap("Character", throwIfNotFound: true);
        m_Character_Movement = m_Character.FindAction("Movement", throwIfNotFound: true);
        m_Character_Attack = m_Character.FindAction("Attack", throwIfNotFound: true);
        m_Character_d4 = m_Character.FindAction("d4", throwIfNotFound: true);
        m_Character_d6 = m_Character.FindAction("d6", throwIfNotFound: true);
        m_Character_d8 = m_Character.FindAction("d8", throwIfNotFound: true);
        m_Character_d12 = m_Character.FindAction("d12", throwIfNotFound: true);
        m_Character_d20 = m_Character.FindAction("d20", throwIfNotFound: true);
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
        m_Menu_OpenCloseMenu = m_Menu.FindAction("OpenCloseMenu", throwIfNotFound: true);
        m_Menu_NextDialogue = m_Menu.FindAction("NextDialogue", throwIfNotFound: true);
        m_Menu_SelectDialogue1 = m_Menu.FindAction("SelectDialogue1", throwIfNotFound: true);
        m_Menu_SelectDialogue2 = m_Menu.FindAction("SelectDialogue2", throwIfNotFound: true);
        m_Menu_SelectDialogue3 = m_Menu.FindAction("SelectDialogue3", throwIfNotFound: true);
        m_Menu_OpenCrafting = m_Menu.FindAction("OpenCrafting", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Character
    private readonly InputActionMap m_Character;
    private ICharacterActions m_CharacterActionsCallbackInterface;
    private readonly InputAction m_Character_Movement;
    private readonly InputAction m_Character_Attack;
    private readonly InputAction m_Character_d4;
    private readonly InputAction m_Character_d6;
    private readonly InputAction m_Character_d8;
    private readonly InputAction m_Character_d12;
    private readonly InputAction m_Character_d20;
    public struct CharacterActions
    {
        private @TopDownPlayerController m_Wrapper;
        public CharacterActions(@TopDownPlayerController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Character_Movement;
        public InputAction @Attack => m_Wrapper.m_Character_Attack;
        public InputAction @d4 => m_Wrapper.m_Character_d4;
        public InputAction @d6 => m_Wrapper.m_Character_d6;
        public InputAction @d8 => m_Wrapper.m_Character_d8;
        public InputAction @d12 => m_Wrapper.m_Character_d12;
        public InputAction @d20 => m_Wrapper.m_Character_d20;
        public InputActionMap Get() { return m_Wrapper.m_Character; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterActions set) { return set.Get(); }
        public void SetCallbacks(ICharacterActions instance)
        {
            if (m_Wrapper.m_CharacterActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMovement;
                @Attack.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnAttack;
                @d4.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnD4;
                @d4.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnD4;
                @d4.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnD4;
                @d6.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnD6;
                @d6.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnD6;
                @d6.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnD6;
                @d8.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnD8;
                @d8.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnD8;
                @d8.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnD8;
                @d12.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnD12;
                @d12.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnD12;
                @d12.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnD12;
                @d20.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnD20;
                @d20.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnD20;
                @d20.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnD20;
            }
            m_Wrapper.m_CharacterActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @d4.started += instance.OnD4;
                @d4.performed += instance.OnD4;
                @d4.canceled += instance.OnD4;
                @d6.started += instance.OnD6;
                @d6.performed += instance.OnD6;
                @d6.canceled += instance.OnD6;
                @d8.started += instance.OnD8;
                @d8.performed += instance.OnD8;
                @d8.canceled += instance.OnD8;
                @d12.started += instance.OnD12;
                @d12.performed += instance.OnD12;
                @d12.canceled += instance.OnD12;
                @d20.started += instance.OnD20;
                @d20.performed += instance.OnD20;
                @d20.canceled += instance.OnD20;
            }
        }
    }
    public CharacterActions @Character => new CharacterActions(this);

    // Menu
    private readonly InputActionMap m_Menu;
    private IMenuActions m_MenuActionsCallbackInterface;
    private readonly InputAction m_Menu_OpenCloseMenu;
    private readonly InputAction m_Menu_NextDialogue;
    private readonly InputAction m_Menu_SelectDialogue1;
    private readonly InputAction m_Menu_SelectDialogue2;
    private readonly InputAction m_Menu_SelectDialogue3;
    private readonly InputAction m_Menu_OpenCrafting;
    public struct MenuActions
    {
        private @TopDownPlayerController m_Wrapper;
        public MenuActions(@TopDownPlayerController wrapper) { m_Wrapper = wrapper; }
        public InputAction @OpenCloseMenu => m_Wrapper.m_Menu_OpenCloseMenu;
        public InputAction @NextDialogue => m_Wrapper.m_Menu_NextDialogue;
        public InputAction @SelectDialogue1 => m_Wrapper.m_Menu_SelectDialogue1;
        public InputAction @SelectDialogue2 => m_Wrapper.m_Menu_SelectDialogue2;
        public InputAction @SelectDialogue3 => m_Wrapper.m_Menu_SelectDialogue3;
        public InputAction @OpenCrafting => m_Wrapper.m_Menu_OpenCrafting;
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void SetCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterface != null)
            {
                @OpenCloseMenu.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnOpenCloseMenu;
                @OpenCloseMenu.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnOpenCloseMenu;
                @OpenCloseMenu.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnOpenCloseMenu;
                @NextDialogue.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnNextDialogue;
                @NextDialogue.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnNextDialogue;
                @NextDialogue.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnNextDialogue;
                @SelectDialogue1.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnSelectDialogue1;
                @SelectDialogue1.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnSelectDialogue1;
                @SelectDialogue1.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnSelectDialogue1;
                @SelectDialogue2.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnSelectDialogue2;
                @SelectDialogue2.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnSelectDialogue2;
                @SelectDialogue2.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnSelectDialogue2;
                @SelectDialogue3.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnSelectDialogue3;
                @SelectDialogue3.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnSelectDialogue3;
                @SelectDialogue3.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnSelectDialogue3;
                @OpenCrafting.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnOpenCrafting;
                @OpenCrafting.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnOpenCrafting;
                @OpenCrafting.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnOpenCrafting;
            }
            m_Wrapper.m_MenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @OpenCloseMenu.started += instance.OnOpenCloseMenu;
                @OpenCloseMenu.performed += instance.OnOpenCloseMenu;
                @OpenCloseMenu.canceled += instance.OnOpenCloseMenu;
                @NextDialogue.started += instance.OnNextDialogue;
                @NextDialogue.performed += instance.OnNextDialogue;
                @NextDialogue.canceled += instance.OnNextDialogue;
                @SelectDialogue1.started += instance.OnSelectDialogue1;
                @SelectDialogue1.performed += instance.OnSelectDialogue1;
                @SelectDialogue1.canceled += instance.OnSelectDialogue1;
                @SelectDialogue2.started += instance.OnSelectDialogue2;
                @SelectDialogue2.performed += instance.OnSelectDialogue2;
                @SelectDialogue2.canceled += instance.OnSelectDialogue2;
                @SelectDialogue3.started += instance.OnSelectDialogue3;
                @SelectDialogue3.performed += instance.OnSelectDialogue3;
                @SelectDialogue3.canceled += instance.OnSelectDialogue3;
                @OpenCrafting.started += instance.OnOpenCrafting;
                @OpenCrafting.performed += instance.OnOpenCrafting;
                @OpenCrafting.canceled += instance.OnOpenCrafting;
            }
        }
    }
    public MenuActions @Menu => new MenuActions(this);
    public interface ICharacterActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnD4(InputAction.CallbackContext context);
        void OnD6(InputAction.CallbackContext context);
        void OnD8(InputAction.CallbackContext context);
        void OnD12(InputAction.CallbackContext context);
        void OnD20(InputAction.CallbackContext context);
    }
    public interface IMenuActions
    {
        void OnOpenCloseMenu(InputAction.CallbackContext context);
        void OnNextDialogue(InputAction.CallbackContext context);
        void OnSelectDialogue1(InputAction.CallbackContext context);
        void OnSelectDialogue2(InputAction.CallbackContext context);
        void OnSelectDialogue3(InputAction.CallbackContext context);
        void OnOpenCrafting(InputAction.CallbackContext context);
    }
}
